// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	api "qbq-open-platform/applicationCenter/api/internal/handler/api"
	customer "qbq-open-platform/applicationCenter/api/internal/handler/customer"
	"qbq-open-platform/applicationCenter/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/targetAppList",
				Handler: api.TargetAppListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/testGetPath/:id",
				Handler: api.TestGetPathHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/testGetQuery",
				Handler: api.TestGetQueryHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/testGetJson",
				Handler: api.TestGetJsonHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/testPostForm",
				Handler: api.TestPostFormHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/testPostJson",
				Handler: api.TestPostJsonHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/updateState",
				Handler: customer.UpdateStateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: customer.CreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/open",
				Handler: customer.OpenHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/updateInfo",
				Handler: customer.UpdateInfoHandler(serverCtx),
			},
		},
		rest.WithPrefix("/customer"),
	)
}
