// Code generated by goctl. DO NOT EDIT!
// Source: application.proto

package client

import (
	"context"

	"qbq-open-platform/applicationCenter/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ApiTargetApp                      = pb.ApiTargetApp
	ApiTargetAppListReq               = pb.ApiTargetAppListReq
	ApiTargetAppListResp              = pb.ApiTargetAppListResp
	CreateApplicationCallbackOrderReq = pb.CreateApplicationCallbackOrderReq
	CreateApplicationCallbackReq      = pb.CreateApplicationCallbackReq
	CreateApplicationCallbackResp     = pb.CreateApplicationCallbackResp
	CreateApplicationReq              = pb.CreateApplicationReq
	CreateApplicationResp             = pb.CreateApplicationResp
	CustomerUpdateStateReq            = pb.CustomerUpdateStateReq
	CustomerUpdateStateResp           = pb.CustomerUpdateStateResp
	GetApplicationCallbackReq         = pb.GetApplicationCallbackReq
	GetApplicationCallbackResp        = pb.GetApplicationCallbackResp
	OpenApplicationReq                = pb.OpenApplicationReq
	OpenApplicationResp               = pb.OpenApplicationResp
	UpdateApplicationCallbackReq      = pb.UpdateApplicationCallbackReq
	UpdateApplicationCallbackResp     = pb.UpdateApplicationCallbackResp
	UpdateApplicationInfoReq          = pb.UpdateApplicationInfoReq
	UpdateApplicationInfoResp         = pb.UpdateApplicationInfoResp

	ApplicationApi interface {
		//  查询可投递的应用列表
		ApiTargetAppList(ctx context.Context, in *ApiTargetAppListReq, opts ...grpc.CallOption) (*ApiTargetAppListResp, error)
	}

	defaultApplicationApi struct {
		cli zrpc.Client
	}
)

func NewApplicationApi(cli zrpc.Client) ApplicationApi {
	return &defaultApplicationApi{
		cli: cli,
	}
}

//  查询可投递的应用列表
func (m *defaultApplicationApi) ApiTargetAppList(ctx context.Context, in *ApiTargetAppListReq, opts ...grpc.CallOption) (*ApiTargetAppListResp, error) {
	client := pb.NewApplicationApiClient(m.cli.Conn())
	return client.ApiTargetAppList(ctx, in, opts...)
}
